# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build
on:
  workflow_call:
    inputs:
      ref:
        description: |
          The Git reference from which to clone the project.

          This can be any valid Git commit-ish (e.g. a SHA, a ref, a tag, and so
          on).

          Defaults to the SHA that caused the workflow to be triggered. If that
          is unavailable the fully formed reference of the branch or tag that
          triggered the workflow is used. If that is unavailable the repository
          default branch is used.
        type: string
        required: false
        default: ${{github.sha || github.ref || github.event.repository.default_branch}}
      java-vendor:
        description: |
          The Java vendor to use.

          Defaults to `temurin`.
        type: string
        required: false
        default: temurin
      java-version:
        description: |
          The Java version to use.

          Defaults to `version-file` to use the version found in the
          `.java-version` file present in the project.
        type: string
        required: false
        default: version-file
      gradle-version:
        description: |
          The Gradle version to use.

          Defaults to `wrapper` to use version of the Gradle wrapper present in
          the project.
        type: string
        required: false
        default: wrapper
      upload-artifacts:
        description: |
          Whether to upload artifacts.

          Defaults to `true`.
        type: boolean
        required: false
        default: true
      artifact-retention-days:
        description: |
          The duration, in days, to retain artifacts for.

          Defaults to `0` which defaults to the value configured for the
          repository.
        type: number
        required: false
        default: 0
    outputs:
      artifact-id:
        description: |
          The ID of the generated artifacts.
        value: ${{jobs.build.outputs.artifact-id}}
      artifact-name:
        description: |
          The name of the generated artifacts.
        value: ${{jobs.build.outputs.artifact-name}}
      artifact-url:
        description: |
          The URL from which the generated artifacts can be downloaded.
        value: ${{jobs.build.outputs.artifact-url}}
    secrets:
      github-token:
        description: |
          The token to use when making authenticated calls to the GitHub API.
        required: true
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      # -- Needed to clone the repository
      contents: read
    outputs:
      artifact-id: ${{steps.upload-artifacts.outputs.artifact-id}}
      artifact-name: dist
      artifact-url: ${{steps.upload-artifacts.outputs.artifact-url}}
    steps:
      - id: checkout-repository
        name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: ${{inputs.ref}}
          lfs: true
          submodules: recursive
          token: ${{secrets.github-token || secrets.GITHUB_TOKEN}}
      - id: read-java-version
        name: Read Java version
        shell: bash
        run: |
          if [[ "${{inputs.java-version}}" -eq "version-file" ]]; then
            if [[ -f ".java-version" ]]; then
              echo "Will be using Java version $(cat .java-version)";
              echo "java-version=$(cat .java-version)" >> "$GITHUB_OUTPUT";
            else
              echo "::error file=.github\workflows\build.yaml,line=96,endLine=96,title=Missing ``.java-version`` file::No ``.java-version`` file found in the repository but workflow action requested to use it as the source of a Java version to use!";
              exit 1;
            fi
          elif [[ -z "${{inputs.java-version}}" ]]; then
              echo "::error file=.github\workflows\build.yaml,line=100,endLine=100,title=Missing Java version::No Java version given to build workflow!";
              exit 1;
          else
            echo "java-version=${{inputs.java-version}}" >> "$GITHUB_OUTPUT"
          fi
      - id: setup-java
        name: Setup Java
        uses: actions/setup-java@v5
        with:
          token: ${{secrets.github-token || secrets.GITHUB_TOKEN}}
          distribution: ${{inputs.java-vendor}}
          java-version: ${{steps.read-java-version.outputs.java-version}}
      - id: setup-gradle
        name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          github-token: ${{secrets.github-token || secrets.GITHUB_TOKEN}}
          gradle-version: ${{inputs.gradle-version}}
      - id: setup-ci-workspace
        name: Setup CI Workspace
        run: ./gradlew setupCIWorkspace
      - id: build
        name: Build
        run: ./gradlew build
      - id: upload-artifacts
        name: Upload artifacts
        if: inputs.upload-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: build/libs/
          compression-level: 0
          if-no-files-found: error
          retention-days: ${{inputs.artifact-retention-days}}
